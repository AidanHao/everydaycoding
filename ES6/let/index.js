// //var 可以重复声明
// console.log(a);
// var a = 1
// console.log(a);
// //代码先编译，再执行



//这里为什么会报错呢？
//if会形成一个块级作用域
//全局作用域的词法环境里面有一个a = 1
//在if块级作用域当中：正常来说先找词法环境在变量环境
//因为a是用let声明的，封装好了，在词法环境里面的变量，在没有值的时候，相当于隐匿状态！！只有赋了值你才能找到
//如果自己的词法环境里面有一个变量，但是这个变量处于隐匿状态，知道存在，但是访问不到,
//知道存在的时候，查找的时候就不会再往下找的，但是访问的时候，因为a处于隐匿状态，就访问不了，就会报错
// let a = 1
// if(true){
//     console.log(a); //暂时性死区
//     let a = 2
// }


//let无法重复声明！,同理const也无法重复声明
// let a = 1
// console.log(a);
// //var声明的变量，会挂在全局对象属性中
// //let声明的变量，不会被挂成全局对象的属性
// var a = 2

// const a =1
// a = 2
// console.log(a);

//obj是地址，指针，地址不变
//为什么不把栈的内存变大--》执行效率会降低
const obj = {
    name:'小红'
}

obj.name = '程总'
console.log(obj)