let a = 13


// 13/2=6 1
// 6/2 = 3 0
// 3/2=1 1
// 1/2=0 1
// 所以13的二进制就是 1101  x*2^n + x*2^(n-1) ....+x*2^0=13
//  1 * 2 ^3 + 1 * 2 ^2 + 0 * 2 ^ 1 + 1 * 2 ^ 0 = 13 要不要，要就x写1 不要就x写0

let b = 1101 
// 二进制转为十进制
// 1 * 2 ^3 + 1 * 2 ^2 + 0 * 2 ^ 1 + 1 * 2 ^ 0 = 13

// console.log(parseInt(1101,2))//默认向下取整，保留整数 有第二个参数 代表要把第一个参数看成几进制，转为十进制
// parseInt(1,0)第二个参数 放0 相当于没有放，也就相当于放10进制  
// 没有进制就会输出NAN,
const arr = [1,2,3]
const newArr = arr.map(parseInt)
// parseInt(1,0) 1
// parseInt(2,1) NaN
// parseInt(3,2) NaN

console.log(newArr);
