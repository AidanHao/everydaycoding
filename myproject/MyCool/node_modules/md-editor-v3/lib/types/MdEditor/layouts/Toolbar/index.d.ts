import { VNode } from 'vue';
import { ToolbarNames } from '../../type';
declare const _default: import("vue").DefineComponent<{
    readonly toolbars: ToolbarNames[];
    readonly toolbarsExclude: ToolbarNames[];
    readonly tableShape: number[];
    readonly setting: import("../../type").SettingType;
    readonly screenfull: Record<string, any>;
    readonly screenfullJs: string;
    readonly updateSetting: import("../../type").UpdateSetting;
    readonly noPrettier: boolean | undefined;
    readonly defToolbars: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | undefined;
    readonly noUploadImg: boolean | undefined;
    readonly showToolbarName: boolean | undefined;
    readonly codeTheme: string | undefined;
    readonly catalogVisible: boolean | undefined;
}, () => import("vue/jsx-runtime").JSX.Element, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").PublicProps, Readonly<{
    readonly toolbars: ToolbarNames[];
    readonly toolbarsExclude: ToolbarNames[];
    readonly tableShape: number[];
    readonly setting: import("../../type").SettingType;
    readonly screenfull: Record<string, any>;
    readonly screenfullJs: string;
    readonly updateSetting: import("../../type").UpdateSetting;
    readonly noPrettier: boolean | undefined;
    readonly defToolbars: VNode<import("vue").RendererNode, import("vue").RendererElement, {
        [key: string]: any;
    }> | undefined;
    readonly noUploadImg: boolean | undefined;
    readonly showToolbarName: boolean | undefined;
    readonly codeTheme: string | undefined;
    readonly catalogVisible: boolean | undefined;
}> & Readonly<{}>, {
    toolbars: ToolbarNames[];
    toolbarsExclude: ToolbarNames[];
    tableShape: number[];
    setting: import("../../type").SettingType;
    screenfull: Record<string, any>;
    screenfullJs: string;
    updateSetting: import("../../type").UpdateSetting;
}, {}, {}, {}, string, import("vue").ComponentProvideOptions, true, {}, any>;
export default _default;
